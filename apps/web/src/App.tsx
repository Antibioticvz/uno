import { ExternalLink, GamepadIcon, MessageCircle, ServerIcon, Zap } from 'lucide-react'
import { useMemo, type FC } from 'react'

import {
  GameState,
  Result,
  UnoColor,
  createGame,
  getPublicState,
  joinGame,
  startGame,
} from '@uno/core'
import { Button } from './components/ui/button.js'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './components/ui/card.js'
import { ScrollArea } from './components/ui/scroll-area.js'
import { Tabs, TabsContent, TabsList, TabsTrigger } from './components/ui/tabs.js'

const COLORS: Record<UnoColor, string> = {
  red: 'üî¥',
  green: 'üü¢',
  blue: 'üîµ',
  yellow: 'üü°',
}

const unwrap = <T,>(result: Result<T>): T => {
  if (!result.ok) {
    throw new Error(result.error.message)
  }
  return result.value
}

const createDemoState = (): GameState => {
  const game = createGame('DEMO1', 'alice')
  unwrap(joinGame(game, 'bob'))
  unwrap(startGame(game, () => 0.42))
  game.players[0].hand = game.players[0].hand.slice(0, 5)
  game.players[1].hand = game.players[1].hand.slice(0, 5)
  return game
}

const formatCard = (color: UnoColor, value: number): string => `${COLORS[color]}${value}`

const CommandRow: FC<{ command: string; description: string }> = ({ command, description }) => (
  <div className="flex flex-col gap-1 rounded-lg border border-border bg-card/60 p-4">
    <code className="font-mono text-sm text-primary">{command}</code>
    <span className="text-sm text-muted-foreground">{description}</span>
  </div>
)

const rules = [
  '–ö–æ–ª–æ–¥–∞: 76 –∫–∞—Ä—Ç (0 –ø–æ –æ–¥–Ω–æ–π, 1-9 –ø–æ –¥–≤–µ –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–∞).',
  '–†–∞–∑–¥–∞—á–∞: –ø–æ 7 –∫–∞—Ä—Ç –∏–≥—Ä–æ–∫–∞–º, –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∞ ‚Äî –≤ —Å–±—Ä–æ—Å –∏ –∑–∞–¥–∞—ë—Ç —Ü–≤–µ—Ç/–Ω–æ–º–∏–Ω–∞–ª.',
  '–•–æ–¥: —Å—ã–≥—Ä–∞—Ç—å –∫–∞—Ä—Ç—É —Ç–æ–≥–æ –∂–µ —Ü–≤–µ—Ç–∞ –∏–ª–∏ –Ω–æ–º–∏–Ω–∞–ª–∞, –ª–∏–±–æ –≤–∑—è—Ç—å –æ–¥–Ω—É –∫–∞—Ä—Ç—É.',
  '–ü–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∫–∞—Ä—Ç—ã –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É —Å—ã–≥—Ä–∞—Ç—å –µ—ë, –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç, –∏–Ω–∞—á–µ –ø–∞—Å.',
  '–ü–æ–±–µ–∂–¥–∞–µ—Ç –∏–≥—Ä–æ–∫, –∏–∑–±–∞–≤–∏–≤—à–∏–π—Å—è –æ—Ç –≤—Å–µ—Ö –∫–∞—Ä—Ç.',
  '–ï—Å–ª–∏ –∫–æ–ª–æ–¥–∞ –∫–æ–Ω—á–∏–ª–∞—Å—å ‚Äî —Ç–∞—Å—É–µ–º —Å–±—Ä–æ—Å (–∫—Ä–æ–º–µ –≤–µ—Ä—Ö–Ω–µ–π –∫–∞—Ä—Ç—ã).',
]

const architectureCards = [
  {
    title: '–ò–≥—Ä–æ–≤–æ–µ —è–¥—Ä–æ',
    description:
      '–ß–∏—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ç–∏–ø–∞–º–∏ TypeScript. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–ª–æ–¥—ã, –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ö–æ–¥–æ–≤, –ø—É–±–ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.',
    icon: <GamepadIcon className="h-5 w-5 text-primary" />,
  },
  {
    title: 'Telegram-–±–æ—Ç',
    description:
      'grammY + inline-–∫–Ω–æ–ø–∫–∏. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π, –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å—é —Ö–æ–¥–æ–≤, —Ä–∞—Å—Å—ã–ª–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Ä—É–∫.',
    icon: <MessageCircle className="h-5 w-5 text-primary" />,
  },
  {
    title: 'Web-–ø–∞–Ω–µ–ª—å',
    description:
      'Vite + React + Tailwind + shadcn/ui. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞—Ä—Ç–∏–∏.',
    icon: <ServerIcon className="h-5 w-5 text-primary" />,
  },
]

const App: FC = () => {
  const demoState = useMemo(createDemoState, [])
  const publicState = useMemo(() => getPublicState(demoState), [demoState])

  const cardGroups = demoState.players.map((player) => ({
    playerId: player.id,
    cards: player.hand.map((card) => formatCard(card.color, card.value)),
    count: player.hand.length,
  }))

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100 text-slate-900">
      <header className="border-b border-border bg-white/90 backdrop-blur">
        <div className="mx-auto flex max-w-5xl flex-col gap-6 px-6 py-10 sm:flex-row sm:items-center sm:justify-between">
          <div className="space-y-3">
            <span className="inline-flex items-center rounded-full bg-secondary px-3 py-1 text-xs font-semibold uppercase tracking-wide text-secondary-foreground">
              UNO Lite
            </span>
            <h1 className="text-3xl font-bold sm:text-4xl">
              –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –º—É–ª—å—Ç–∏–ø–ª–µ–µ—Ä–Ω–∞—è UNO –¥–ª—è Telegram
            </h1>
            <p className="max-w-xl text-base text-muted-foreground">
              –î–≤—É—Ö–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π Telegram-–±–æ—Ç —Å –∏–≥—Ä–æ–≤—ã–º —è–¥—Ä–æ–º –Ω–∞ TypeScript –∏ web-–ø–∞–Ω–µ–ª—å—é. –ö–æ–¥
              –Ω–∞–ø–∏—Å–∞–Ω –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º KISS, DRY –∏ SOLID, –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è <code>any</code>.
            </p>
            <div className="flex flex-wrap gap-3">
              <Button asChild>
                <a
                  href="https://t.me"
                  target="_blank"
                  rel="noreferrer"
                  className="inline-flex items-center gap-2"
                >
                  <Zap className="h-4 w-4" />
                  –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
                </a>
              </Button>
              <Button variant="secondary" asChild>
                <a
                  href="https://github.com/Antibioticvz/uno"
                  target="_blank"
                  rel="noreferrer"
                  className="inline-flex items-center gap-2"
                >
                  <ExternalLink className="h-4 w-4" />
                  –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
                </a>
              </Button>
            </div>
          </div>
        </div>
      </header>

      <main className="mx-auto flex max-w-5xl flex-col gap-10 px-6 py-12">
        <section className="grid gap-6 sm:grid-cols-3">
          {architectureCards.map((card) => (
            <Card key={card.title} className="border-border/70 bg-white/80">
              <CardHeader className="flex flex-row items-center gap-4">
                <div className="flex h-12 w-12 items-center justify-center rounded-full bg-primary/10">
                  {card.icon}
                </div>
                <div>
                  <CardTitle>{card.title}</CardTitle>
                  <CardDescription>{card.description}</CardDescription>
                </div>
              </CardHeader>
            </Card>
          ))}
        </section>

        <Tabs defaultValue="commands" className="w-full">
          <TabsList>
            <TabsTrigger value="commands">–ö–æ–º–∞–Ω–¥—ã</TabsTrigger>
            <TabsTrigger value="rules">–ü—Ä–∞–≤–∏–ª–∞</TabsTrigger>
            <TabsTrigger value="demo">–î–µ–º–æ-—Å—Ç–æ–ª</TabsTrigger>
          </TabsList>
          <TabsContent value="commands">
            <ScrollArea className="h-72 rounded-lg border border-border/70 bg-white/80 p-6">
              <div className="grid gap-4">
                <CommandRow
                  command="/create"
                  description="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É –∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è."
                />
                <CommandRow
                  command="/join <–∫–æ–¥>"
                  description="–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫–æ –≤—Ç–æ—Ä–æ–π –ø–æ–∑–∏—Ü–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–¥–∞ –∫–æ–º–Ω–∞—Ç—ã."
                />
                <CommandRow
                  command="/hand"
                  description="–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–∞—à—É —Ç–µ–∫—É—â—É—é —Ä—É–∫—É (–ø—Ä–∏–≤–∞—Ç–Ω–æ)."
                />
                <CommandRow
                  command="/play <id>"
                  description="–°—ã–≥—Ä–∞—Ç—å –∫–∞—Ä—Ç—É –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É ‚Äî –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–∞–∫–∂–µ –≤—ã–±–æ—Ä —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏."
                />
                <CommandRow
                  command="/draw"
                  description="–í–∑—è—Ç—å –æ–¥–Ω—É –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π."
                />
                <CommandRow command="/pass" description="–ü–µ—Ä–µ–¥–∞—Ç—å —Ö–æ–¥ –ø–æ—Å–ª–µ –≤–∑—è—Ç–∏—è –∫–∞—Ä—Ç—ã." />
                <CommandRow command="/state" description="–ü–æ–∫–∞–∑–∞—Ç—å –ø—É–±–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–æ–ª–∞." />
                <CommandRow
                  command="/leave"
                  description="–ü–æ–∫–∏–Ω—É—Ç—å –∫–æ–º–Ω–∞—Ç—É –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞—Ä—Ç–∏—é."
                />
              </div>
            </ScrollArea>
          </TabsContent>
          <TabsContent value="rules">
            <Card className="border-border/70 bg-white/80">
              <CardHeader>
                <CardTitle>UNO Lite ‚Äî –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞</CardTitle>
                <CardDescription>
                  –°–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π UNO, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥ —á–∞—Ç-–±–æ—Ç–∞.
                </CardDescription>
              </CardHeader>
              <CardContent>
                <ul className="space-y-3 text-sm leading-relaxed text-muted-foreground">
                  {rules.map((rule) => (
                    <li key={rule} className="flex gap-2">
                      <span className="mt-1 h-2 w-2 flex-none rounded-full bg-primary" />
                      <span>{rule}</span>
                    </li>
                  ))}
                </ul>
              </CardContent>
            </Card>
          </TabsContent>
          <TabsContent value="demo">
            <div className="grid gap-6 lg:grid-cols-[2fr,1fr]">
              <Card className="border-border/70 bg-white/90">
                <CardHeader>
                  <CardTitle>–°—Ç–æ–ª DEMO1</CardTitle>
                  {publicState.topDiscard ? (
                    <CardDescription>
                      –í–µ—Ä—Ö–Ω—è—è –∫–∞—Ä—Ç–∞:{' '}
                      {formatCard(publicState.topDiscard.color, publicState.topDiscard.value)} ¬∑
                      –•–æ–¥–∏—Ç: {publicState.activePlayerId}
                    </CardDescription>
                  ) : (
                    <CardDescription>–ü–∞—Ä—Ç–∏—è –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ —Å—Ç–∞—Ä—Ç—É.</CardDescription>
                  )}
                </CardHeader>
                <CardContent className="grid gap-4">
                  {cardGroups.map((group) => (
                    <div
                      key={group.playerId}
                      className="rounded-lg border border-border/60 bg-muted/40 p-4"
                    >
                      <div className="flex items-center justify-between text-sm font-semibold">
                        <span>{group.playerId}</span>
                        <span>{group.count} –∫–∞—Ä—Ç</span>
                      </div>
                      <div className="mt-3 flex flex-wrap gap-2 text-lg">
                        {group.cards.map((card) => (
                          <span key={card} className="rounded-md bg-white px-3 py-1 shadow-sm">
                            {card}
                          </span>
                        ))}
                      </div>
                    </div>
                  ))}
                </CardContent>
              </Card>
              <Card className="border-border/70 bg-white/90">
                <CardHeader>
                  <CardTitle>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</CardTitle>
                  <CardDescription>
                    –Ø–¥—Ä–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ–∂–¥—É –±–æ—Ç–æ–º –∏ web-–ø–∞–Ω–µ–ª—å—é.
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-3 text-sm text-muted-foreground">
                  <p>
                    <strong>Node.js + TypeScript:</strong> —Å—Ç—Ä–æ–≥–∏–µ —Ç–∏–ø—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ <code>any</code>
                    .
                  </p>
                  <p>
                    <strong>grammY:</strong> —É–¥–æ–±–Ω—ã–π API –±–æ—Ç–∞, inline-–∫–Ω–æ–ø–∫–∏, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫.
                  </p>
                  <p>
                    <strong>React + Tailwind + shadcn/ui:</strong> –±—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –≥–æ—Ç–æ–≤—ã–µ
                    UI-–ø–∞—Ç—Ç–µ—Ä–Ω—ã.
                  </p>
                  <p>
                    <strong>Vitest:</strong> –º–æ–¥—É–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –∏–≥—Ä–æ–≤–æ–≥–æ —è–¥—Ä–∞ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–∞–≤–∏–ª.
                  </p>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </main>

      <footer className="border-t border-border/60 bg-white/80">
        <div className="mx-auto flex max-w-5xl flex-col gap-2 px-6 py-6 text-sm text-muted-foreground sm:flex-row sm:items-center sm:justify-between">
          <span>¬© {new Date().getFullYear()} UNO Lite. –í—Å–µ –ø—Ä–∞–≤–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞ —Å–æ–±–ª—é–¥–µ–Ω—ã.</span>
          <span className="flex items-center gap-2">
            <Zap className="h-4 w-4" />
            KISS ¬∑ DRY ¬∑ SOLID ¬∑ TypeScript Strict
          </span>
        </div>
      </footer>
    </div>
  )
}

export default App
